{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreaters.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/leaders.js","redux/promotions.js","redux/comments.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","outline","isOpen","toggle","onSubmit","htmlFor","md","size","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","Component","RenderDish","top","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","isNumber","isNaN","Number","validEmail","test","Contact","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","offset","check","checkbox","About","RenderLeader","left","object","body","heading","RenderContent","leaders","title","list","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","newComment","toISOString","method","JSON","stringify","headers","credentials","console","log","newFeedback","Dishes","action","Leaders","Promotions","Comments","concat","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9f31a5f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {Card, CardBody, CardImg, CardText, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n      return <Loading />;\r\n    } else if (errMess) {\r\n      return <h4>{errMess}</h4>;\r\n    } else\r\n      return (\r\n        <FadeTransform\r\n          in\r\n          transformProps={{\r\n            exitTransform: \"scale(0.5) translateY(-50%)\"\r\n          }}\r\n        >\r\n          <Card>\r\n            <CardImg src={baseUrl + item.image} alt={item.name} />\r\n            <CardBody>\r\n              <CardTitle>{item.name}</CardTitle>\r\n              {item.designation ? (\r\n                <CardSubtitle>{item.designation}</CardSubtitle>\r\n              ) : null}\r\n              <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </FadeTransform>\r\n      );\r\n  }\r\n  \r\n  function Home(props) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-start\">\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard\r\n              item={props.dish}\r\n              isLoading={props.dishesLoading}\r\n              errMess={props.dishErrMess}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard\r\n              item={props.promotion}\r\n              isLoading={props.promoLoading}\r\n              errMess={props.promoErrMess}\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md m-1\">\r\n            <RenderCard\r\n              item={props.leader}\r\n              isLoading={props.leaderLoading}\r\n              errMess={props.leaderErrMess}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem ({dish, onClick}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n              <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                  <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem> <Link to='\\home'>Home</Link> </BreadcrumbItem>\r\n                            <BreadcrumbItem active> Menu </BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                            {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n    }\r\n        \r\n\r\n    \r\n\r\nexport default Menu;","import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Modal, ModalHeader, ModalBody, Breadcrumb,\r\n  BreadcrumbItem, Button, Row, Col, Label } from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil\" /> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={this.handleSubmit}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={12}>\r\n                  Rating\r\n                </Label>\r\n                <Col md={{ size: 12 }}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={12}>\r\n                  Your Name\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={12}>\r\n                  Comment\r\n                </Label>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows={5}\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n              <div className='col-12 col-md-5 m-1'>\r\n                    <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </FadeTransform>\r\n              </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                        </Stagger>\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const Dishdetail = (props) => {\r\n        if (props.isLoading) {\r\n          return(\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <Loading />\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        else if (props.errMess) {\r\n          return(\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <h4>{props.errMess}</h4>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        \r\n        else if (props.dish == null) {\r\n            return (<div></div>)\r\n        }\r\n\r\n        else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem> <Link to='/menu'>Menu</Link> </BreadcrumbItem>\r\n                        <BreadcrumbItem active> {props.dish.name} </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} \r\n                      postComment={props.postComment}\r\n                      dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Dishdetail;","import React, {Component} from 'react';\r\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap'\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Form, Errors} from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleSubmit(values) {\r\n      this.props.resetFeedbackForm();\r\n      this.props.postFeedback(\r\n        values.firstname,\r\n        values.lastname,\r\n        values.telnum,\r\n        values.email,\r\n        values.agree,\r\n        values.contactType,\r\n        values.message\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Breadcrumb>\r\n              <BreadcrumbItem>\r\n                <Link to=\"/home\">Home</Link>\r\n              </BreadcrumbItem>\r\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n              <h3>Contact Us</h3>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-content\">\r\n            <div className=\"col-12\">\r\n              <h3>Send us your Feedback</h3>\r\n            </div>\r\n            <div className=\"col-12 col-md-9\">\r\n              <Form\r\n                model=\"feedback\"\r\n                onSubmit={values => this.handleSubmit(values)}\r\n              >\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"firstname\" md={2}>\r\n                    First Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".firstname\"\r\n                      id=\"firstname\"\r\n                      name=\"firstname\"\r\n                      placeholder=\"First Name\"\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15)\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".firstname\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        minLength: \"Must be greater than 2 characters\",\r\n                        maxLength: \"Must be 15 characters or less\"\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"lastname\" md={2}>\r\n                    Last Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".lastname\"\r\n                      id=\"lastname\"\r\n                      name=\"lastname\"\r\n                      placeholder=\"Last Name\"\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15)\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".lastname\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        minLength: \"Must be greater than 2 characters\",\r\n                        maxLength: \"Must be 15 characters or less\"\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"telnum\" md={2}>\r\n                    Contact Tel.\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".telnum\"\r\n                      id=\"telnum\"\r\n                      name=\"telnum\"\r\n                      placeholder=\"Tel. Number\"\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15),\r\n                        isNumber\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".telnum\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        minLength: \"Must be greater than 2 numbers\",\r\n                        maxLength: \"Must be 15 numbers or less\",\r\n                        isNumber: \"Must be a number\"\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"email\" md={2}>\r\n                    Email\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        validEmail\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".email\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        validEmail: \"Invalid Email Address\"\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 6, offset: 2 }}>\r\n                    <div className=\"form-check\">\r\n                      <Label check>\r\n                        <Control.checkbox\r\n                          model=\".agree\"\r\n                          name=\"agree\"\r\n                          className=\"form-check-input\"\r\n                        />{\" \"}\r\n                        <strong>May we contact you?</strong>\r\n                      </Label>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={{ size: 3, offset: 1 }}>\r\n                    <Control.select\r\n                      model=\".contactType\"\r\n                      name=\"contactType\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option>Tel.</option>\r\n                      <option>Email</option>\r\n                    </Control.select>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"message\" md={2}>\r\n                    Your Feedback\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.textarea\r\n                      model=\".message\"\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      rows={12}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                      Send Feedback\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Contact;","import React from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction About(props) {\r\n  function RenderLeader({ leader }) {\r\n    return (\r\n      <Media className=\"mt-5\">\r\n        <Media left className=\"mr-5\">\r\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        <Media body>\r\n          <Media heading>{leader.name}</Media>\r\n          <p>{leader.designation}</p>\r\n          {leader.description}\r\n        </Media>\r\n      </Media>\r\n    );\r\n  }\r\n\r\n  function RenderContent({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n      return <Loading />;\r\n    } else if (errMess) {\r\n      return <h4>{errMess}</h4>;\r\n    } else\r\n      return (\r\n        <Stagger in>\r\n          {props.leaders.map(leader => (\r\n            <Fade in key={leader.id}>\r\n              <RenderLeader key={leader.id} leader={leader} />\r\n            </Fade>\r\n          ))}\r\n        </Stagger>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{\" \"}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Media list>\r\n            <RenderContent\r\n              leaders={props.leader}\r\n              isLoading={props.leaderLoading}\r\n              errMess={props.leaderErrMess}\r\n            />\r\n          </Media>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse,NavItem, Jumbotron,\r\n        Button, Modal, ModalBody, ModalHeader,\r\n        Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" password :\" + this.password.value + \" Remember :\" + this.remember.checked);\r\n        event.preventDefault();\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                </Button>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = comment => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => dispatch => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + \"comments\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => {\r\n      console.log(\"post comments\", error.message);\r\n      alert(\"Your comment could not be posted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => dispatch => {\r\n  dispatch(dishesLoading());\r\n\r\n  return fetch(baseUrl + \"dishes\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = errmess => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addDishes = dishes => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => dispatch => {\r\n  return fetch(baseUrl + \"comments\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = errmess => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addComments = comments => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => dispatch => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + \"promotions\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = errmess => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addPromos = promos => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => dispatch => {\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + \"leaders\")\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = errmess => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = leaders => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n) => dispatch => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n  };\r\n\r\n  return fetch(baseUrl + \"feedback\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response =>\r\n      alert(\"Thank you for your feedback!\" + JSON.stringify(response))\r\n    )\r\n    .catch(error => {\r\n      console.log(\"post feedbacks\", error.message);\r\n      alert(\"Your feedback could not be posted\\nError: \" + error.message);\r\n    });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"react-redux-form\";\r\nimport Home from \"./HomeComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishdetailComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport AboutUs from \"./AboutComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport {\r\n  postComment,\r\n  postFeedback,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders\r\n} from \"../redux/ActionCreaters\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname,\r\n    lastname, telnum, email, agree, contactType, message) => dispatch( postFeedback(\r\n    firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(promo => promo.featured)[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter(leader => leader.featured)[0]\r\n          }\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              dish => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            comment => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          addComment={this.props.addComment}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <TransitionGroup>\r\n            <CSSTransition\r\n              key={this.props.location.key}\r\n              classNames=\"page\"\r\n              timeout={300}\r\n            >\r\n              <Switch location={this.props.location}>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route\r\n                  exact\r\n                  path=\"/aboutus\"\r\n                  component={() => (\r\n                    <AboutUs\r\n                      leaders={this.props.leaders.leaders}\r\n                      leaderLoading={this.props.leaders.isLoading}\r\n                      leaderErrMess={this.props.leaders.errMess}\r\n                    />\r\n                  )} />\r\n                <Route\r\n                  exact\r\n                  path=\"/menu\"\r\n                  component={() => <Menu dishes={this.props.dishes} />}\r\n                />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route\r\n                  exact\r\n                  path=\"/contactus\"\r\n                  component={() => (\r\n                    <Contact\r\n                      resetFeedbackForm={this.props.resetFeedbackForm}\r\n                      postFeedback={this.props.postFeedback}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Main)\r\n);","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { \r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes:[]\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n  state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n    \r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: '',\r\n    message: '',\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore'\n\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store} >\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n      \n      \n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\nimport {Dishes} from './dishes';\r\nimport {Leaders} from './leaders';\r\nimport {Promotions} from './promotions';\r\nimport {Comments} from './comments';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            leaders: Leaders,\r\n            promotions: Promotions,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store; \r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}